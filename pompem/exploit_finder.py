import asyncio

from .messages import show_results
from .scrapers import PacketStorm
from .scrapers import CXSecurity
from .scrapers import ZeroDay


class ExploitFinder:
    scrapers = [PacketStorm(), CXSecurity(), ZeroDay()]

    def __init__(self, options):
        self.options = options

    async def run(self):
        await self.run_scrapers()

        for scraper in self.scrapers:
            for keyword, exploits in scraper.items():
                show_results(keyword, exploits)

    async def run_scrapers(self):
        for tasks in self.make_scrapers_tasks():
            [await task for task in tasks]

    def make_scrapers_tasks(self):
        keywords = self.options.keywords.split(",")

        for keyword in keywords:
            yield (asyncio.create_task(scraper(keyword)) for scraper in self.scrapers)
